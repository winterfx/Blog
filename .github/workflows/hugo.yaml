# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      BASE_URL: 'https://github.com/winterfx/winterfx.github.io'
    steps:
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.121.1'
          extended: true       
      # 如果您的站点、主题和模块不使用Dart Sass转译器将 Sass 转译为 CSS，您可以删除此步骤。
      # - name: Install Dart Sass
      #   run: sudo snap install dart-sass 
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Git submodule update
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive 
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd winter-blog
          rm -rf public
          hugo \
            --gc \
            --minify \
            --baseURL "${{ env.BASE_URL }}/"
            ls -all
          
      - name: Deploy public folder to GitHub Pages Repository
        run: |
          cd winter-blog/public
          git init -b main
          git remote add origin https://github.com/winterfx/winterfx.github.io.git
          git pull --rebase origin main
          git add .
          git commit -m "sync"
          git push origin main
  # Deployment job
  # deploy:
  #   # environment:
  #   #   name: github-pages
  #   #   url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v3
  #       with:
  #         repository: winterfx/winterfx.github.io
  #         # Target branch
  #         branch: main
  #         # Source directory
  #         folder: winter-blog/public
  #         # Keep files from the previous deployment
  #         keep_files: false
  #         # Commit message
  #         commit_message: Deploy the latest changes to GitHub Pages
  #         # Commit user name
  #         committer: GitHub Actions